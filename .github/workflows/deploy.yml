name: Build and Deploy Jekyll Site

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'
      - '**.md'  # Ignore all markdown files except those in _posts
      - '!_posts/**.md'  # Don't ignore posts
      - '!about.md'
      - '!index.md'
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read
  actions: read    # For artifact upload/download

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent runaway builds

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Add apt cache
      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/package-lock.json') }}

      - name: Install ImageMagick and RMagick dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install --no-install-recommends \
            libmagickwand-dev \
            imagemagick \
            pkg-config \
            build-essential
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Configure ImageMagick policy
        run: |
          sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF" \/>/<policy domain="coder" rights="read|write" pattern="PDF" \/>/' /etc/ImageMagick-6/policy.xml

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Show bundler version
        run: bundle -v

      - name: Jekyll double build (for webp etc.)
        run: |
          set -e  # Exit on error
          JEKYLL_ENV=production bundle exec jekyll build --trace
          JEKYLL_ENV=production bundle exec jekyll build --trace

      - name: HTMLProofer check
        run: |
          bundle exec htmlproofer ./_site \
            --checks "Links,Images,Scripts" \
            --disable_external \
            --ignore_empty_alt \
            --ignore_missing_alt \
            --enforce_https \
            --log_level :info

      - name: Upload _site
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site
          path: _site
          retention-days: 1  # Only keep for 1 day since this is temporary
          if-no-files-found: error  # Fail if _site is empty

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Download _site artifact
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: _site

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Sync static assets to S3
        run: |
          aws s3 sync ./_site s3://jamesrcounts.com/ \
            --delete \
            --cache-control "max-age=3600" \
            --exclude "*.html" \
            --metadata-directive REPLACE

      - name: Sync HTML files to S3
        run: |
          aws s3 sync ./_site s3://jamesrcounts.com/ \
            --delete \
            --cache-control "no-cache" \
            --include "*.html" \
            --content-type "text/html; charset=utf-8" \
            --metadata-directive REPLACE

      - name: Verify deployment
        run: |
          # Wait a few seconds for S3 propagation
          sleep 5
          # Check if the site is accessible
          curl -sSf https://jamesrcounts.com > /dev/null || exit 1
        continue-on-error: true
